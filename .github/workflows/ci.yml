name: Build, test and distribute
on:
  push:
    branches:
      - main
      - 'release/*'
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: setup
        uses: ./.github/actions/setup
      - name: Archive mobile core dependency
        uses: actions/upload-artifact@v3
        with:
          name: mobilecore
          path: |
            mobilecore/mobilecore.aar
          retention-days: 2
      - name: Spotless
        run: ./gradlew spotlessCheck
      - name: Test
        run: ./gradlew testDebug testAccDebug holder:lintAccDebug verifier:lintAccDebug holder:assemAccDebug holder:assemAccDebugAndroidTest
      - name: Run tests on Testlab
        if: "!contains(github.event.pull_request.labels.*.name, 'skip-screenshot-tests')"
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        run: |
          echo $FIREBASE_SERVICE_ACCOUNT > $RUNNER_TEMP/.firebase_service_account.json
          export GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/.firebase_service_account.json >> $GITHUB_ENV
          ./gradlew holder:runFlank
      - name: Archive test-results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            holder/build/reports
            verifier/build/reports
          retention-days: 2

  distribute:
    if: ${{ (github.event.repository.name == 'nl-covid19-coronacheck-app-android-private' && (github.ref == 'refs/heads/main' || contains(github.event.ref, 'release/') || contains(github.event.pull_request.labels.*.name, 'generate-builds'))) }}
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_URL }}
      SLACK_MESSAGE: 'New apps available for android :green_heart:'
      KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
      KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      GENERATE_FDROID_BUILDS: ${{ contains(github.event.pull_request.labels.*.name, 'generate-fdroid-builds') }}
      KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
    runs-on: ubuntu-latest
    needs: [ "build-and-test" ]

    steps:
      - uses: actions/checkout@v3
      - id: setup
        uses: ./.github/actions/setup
      - name: Write key store
        run: echo $KEYSTORE_FILE | base64 --decode > keystore.jks
      - name: Build
        run: ./gradlew assemTstRelease assemAccRelease assemProdRelease bundleProdRelease
      - name: Build fdroid
        if: ${{ env.GENERATE_FDROID_BUILDS == 'true' }}
        run: /gradlew assemFdroidAccRelease
      - name: Clean up key store
        run: rm keystore.jks
      - name: Archive apks
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: |
            holder/build/outputs/apk
            verifier/build/outputs/apk
          retention-days: 5
      - name: Archive bundle
        uses: actions/upload-artifact@v3
        with:
          name: bundle
          path: |
            holder/build/outputs/bundle
            verifier/build/outputs/bundle
          retention-days: 5

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: apks
          path: apks

      - name: Install firebase-cli
        uses: littlerobots/firebase-action@0bd9bd607cbc96e84fa2a95f74d1b31c93e56f5e
        with:
          serviceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Distribute holder test variant
        run: |
          firebase appdistribution:distribute `ls apks/holder/build/outputs/apk/tst/release/holder-*.apk` \
          --app 1:168257592968:android:cbb6d05f4163e39026493d \
          --groups testers

      - name: Distribute holder acc variant
        run: |
          firebase appdistribution:distribute `ls apks/holder/build/outputs/apk/acc/release/holder-*.apk` \
          --app 1:168257592968:android:5df6b2057b90a30826493d \
          --groups testers

      - name: Distribute holder fdroid acc variant
        if: ${{ env.GENERATE_FDROID_BUILDS == 'true' }}
        run: |
          firebase appdistribution:distribute `ls apks/holder/build/outputs/apk/fdroidAcc/release/holder-*.apk` \
          --app 1:168257592968:android:28c578809115867926493d \
          --groups testers

      - name: Distribute holder prod variant
        run: |
          firebase appdistribution:distribute `ls apks/holder/build/outputs/apk/prod/release/holder-*.apk` \
          --app 1:168257592968:android:aaa5afb416536fdb26493d \
          --groups testers

      - name: Distribute verifier acc variant
        run: |
          firebase appdistribution:distribute `ls apks/verifier/build/outputs/apk/acc/release/verifier-*.apk` \
          --app 1:168257592968:android:e9d445c4115a5c9d26493d \
          --groups testers

      - name: Distribute verifier fdroid acc variant
        if: ${{ env.GENERATE_FDROID_BUILDS == 'true' }}
        run: |
          firebase appdistribution:distribute `ls apks/verifier/build/outputs/apk/fdroidAcc/release/verifier-*.apk` \
          --app 1:168257592968:android:a5a6c5d5af1c18c726493d \
          --groups testers

      - name: Distribute verifier prod variant
        run: |
          firebase appdistribution:distribute `ls apks/verifier/build/outputs/apk/prod/release/verifier-*.apk` \
          --app 1:168257592968:android:79363a1282863aac26493d \
          --groups testers

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2

