name: 'Build mobile core'
description: 'Builds the mobile core library'
runs:
  using: "composite"
  steps:
    - name: Get mobile core version
      id: version
      run: |
        echo "::set-output name=VERSION::`git rev-parse HEAD`"
      working-directory: mobilecore-src
      shell: bash
    - name: Restore from cache
      id: corecache
      uses: actions/cache@v2
      with:
        path: |
          mobilecore/mobilecore.aar
        key: mobilecore-aar-${{ steps.version.outputs.VERSION }}-${{ hashfiles('mobilecore-src/go.mod') }}
    - name: Setup go
      if: steps.corecache.outputs.cache-hit != 'true'
      uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
      with:
        go-version-file: 'mobilecore-src/go.mod'
    - name: Build mobile core
      if: steps.corecache.outputs.cache-hit != 'true'
      run: |
        if [ `uname` == "Darwin" ]; then
          export ARCH="mac"
        else
          export ARCH="linux"
        fi      
        wget https://dl.google.com/android/repository/commandlinetools-$ARCH-8512546_latest.zip
        unzip commandlinetools-mac-8512546_latest.zip
        export SDK_ROOT=$PWD/cmdline-tools
        export ANDROID_HOME=$SDK_ROOT
        bash -c "yes || true" | cmdline-tools/bin/sdkmanager --licenses --sdk_root=$SDK_ROOT
        cmdline-tools/bin/sdkmanager 'ndk;21.4.7075529' 'platforms;android-33' --sdk_root=$SDK_ROOT
        export ANDROID_NDK_HOME=$SDK_ROOT/ndk/21.4.7075529
        cd mobilecore-src
        go install golang.org/x/mobile/cmd/gomobile@latest
        go install golang.org/x/mobile/cmd/gobind@latest
        go get golang.org/x/mobile/cmd/gomobile@latest
        go get golang.org/x/mobile/cmd/gobind@latest
        gomobile init
        gomobile bind -target android -o mobilecore.aar github.com/minvws/nl-covid19-coronacheck-mobile-core
        cd ..
        cp mobilecore-src/mobilecore.aar mobilecore/
      shell: bash
